# Generated by Django 3.1.7 on 2021-06-14 16:43

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('keyword', models.CharField(blank=True, default=None, max_length=124, null=True)),
                ('monitor_type', models.PositiveSmallIntegerField(choices=[(0, 'HTTP-HTTPS'), (1, 'Check HTML')])),
                ('last_request', models.DateTimeField()),
                ('next_request', models.DateTimeField()),
                ('interval', models.DurationField(validators=[django.core.validators.MinValueValidator(datetime.timedelta(seconds=60)), django.core.validators.MaxValueValidator(datetime.timedelta(seconds=3600))])),
                ('max_timeout', models.DurationField(default=datetime.timedelta(seconds=10), validators=[django.core.validators.MinValueValidator(datetime.timedelta(seconds=1)), django.core.validators.MaxValueValidator(datetime.timedelta(seconds=30))])),
                ('url', models.URLField()),
                ('name', models.CharField(max_length=124)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('by_telegram', models.BooleanField(blank=True, default=None, null=True)),
                ('by_email', models.BooleanField(default=False)),
                ('error_notification_interval', models.DurationField(default=datetime.timedelta(seconds=300), validators=[django.core.validators.MinValueValidator(datetime.timedelta(seconds=300)), django.core.validators.MaxValueValidator(datetime.timedelta(seconds=3600))])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='monitors', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='MonitorConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pro_log_rotation', models.IntegerField(default=300000)),
                ('free_log_rotation', models.IntegerField(default=20000)),
                ('free_log_min_interval', models.DurationField(default=datetime.timedelta(seconds=60))),
                ('pro_max_monitors', models.IntegerField(default=50)),
                ('free_max_monitors', models.IntegerField(default=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MonitorLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('error', models.TextField(blank=True, default=None, null=True)),
                ('response_code', models.IntegerField(blank=True, default=None, null=True)),
                ('response_time', models.FloatField()),
                ('keyword', models.BooleanField(blank=True, default=None, null=True)),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='monitor.monitor')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
    ]
